Index: src/main/java/main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class main {\r\n    public static void main(String[] args) throws Exception {\r\n        deleteStatements.deleteDatabase();\r\n        checker.checkAndCreate();\r\n        //mandatory line\r\n        Database.connect();\r\n        MyParser parser = new MyParser(\"new.pdf\");\r\n        MyParser parser3 = new MyParser(\"dc_good.pdf\");\r\n        MyParser parser55 = new MyParser(\"unix_badamount.pdf\");\r\n        MyParser parser5 = new MyParser(\"unix_good.pdf\");\r\n        MyParser parser6 = new MyParser(\"dc_good.pdf\");\r\n        MyParser parser7= new MyParser(\"holes.pdf\");\r\n\r\n        MyParser parser8 = new MyParser(\"nitbad.pdf\");\r\n          MyParser parser88 = new MyParser(\"nitgoodF.pdf\");\r\n          MyParser parser9 = new MyParser(\"Бігунець.pdf\");\r\n\r\n//\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/main.java	(revision f3e19aefdb3fde829e6a741baace43cc66dd577f)
+++ src/main/java/main.java	(date 1624002025246)
@@ -4,16 +4,15 @@
         checker.checkAndCreate();
         //mandatory line
         Database.connect();
-        MyParser parser = new MyParser("new.pdf");
-        MyParser parser3 = new MyParser("dc_good.pdf");
-        MyParser parser55 = new MyParser("unix_badamount.pdf");
-        MyParser parser5 = new MyParser("unix_good.pdf");
-        MyParser parser6 = new MyParser("dc_good.pdf");
-        MyParser parser7= new MyParser("holes.pdf");
-
-        MyParser parser8 = new MyParser("nitbad.pdf");
-          MyParser parser88 = new MyParser("nitgoodF.pdf");
-          MyParser parser9 = new MyParser("Бігунець.pdf");
+//        MyParser parser = new MyParser("new.pdf");
+//        MyParser parser3 = new MyParser("dc_good.pdf");
+//        MyParser parser55 = new MyParser("unix_badamount.pdf");
+//        MyParser parser5 = new MyParser("unix_good.pdf");
+//        MyParser parser6 = new MyParser("dc_good.pdf");
+//        MyParser parser7= new MyParser("holes.pdf");
+//          MyParser parser8 = new MyParser("nitbad.pdf");
+//          MyParser parser88 = new MyParser("nitgoodF.pdf");
+//          MyParser parser9 = new MyParser("Бігунець.pdf");
 
 //
     }
Index: src/main/java/MyParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Entities.*;\r\nimport org.apache.commons.lang3.StringUtils;\r\nimport org.apache.pdfbox.pdmodel.PDDocument;\r\nimport org.apache.pdfbox.text.PDFTextStripper;\r\n\r\nimport java.io.File;\r\nimport java.sql.Date;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport static org.apache.pdfbox.pdfparser.PDFParser.load;\r\n\r\npublic  class MyParser {\r\n\r\n    String path;\r\n    String error = \"Нема помилок)\";\r\n    ArrayList<String> ordinaryStrings = new ArrayList<>();\r\n    public  MyParser(String path) throws Exception {\r\n        System.out.println(\"Start\");\r\n        this.path=path;\r\n        File file = new File(path);\r\n        PDDocument document = load(file);\r\n\r\n        PDFTextStripper pdfStripper = new PDFTextStripper();\r\n\r\n        String text = pdfStripper.getText(document);\r\n        text= text.replaceAll(\"\\n\",\"\")\r\n                .replaceAll(\"\\r\",\"\");\r\n\r\n        try {\r\n\r\n        if (text.contains(\"ВІДОМІСТЬ\")){\r\n\r\n            text= text.replaceAll(\"\\\\s+\", \" \")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n\r\n            String vidId=StringUtils.substringBetween(text,\"№\", \"Освітній\");\r\n            ordinaryStrings.add(vidId);\r\n            String edu=StringUtils.substringBetween(text,\"рівень\", \"Факультет\");\r\n            String fac=StringUtils.substringBetween(text,\"Факультет\", \"Рік\");\r\n            if(edu.equals(null)) throw new Exception(\"нема факультету\");\r\n            String year=StringUtils.substringBetween(text,\"навчання\", \"Група\");\r\n            String grouup =StringUtils.substringBetween(text,\"Група\", \"Дисципліна\");\r\n            String sub =StringUtils.substringBetween(text,\"Дисципліна\", \"Семестр\");\r\n            String sem =StringUtils.substringBetween(text,\"Семестр\", \"Залікові\");\r\n            String credits =StringUtils.substringBetween(text,\"бали\", \"Форма\");\r\n            String contr =StringUtils.substringBetween(text,\"контролю:\", \"Дата\");\r\n            String dat =StringUtils.substringBetween(text,\"Дата\", \"р.\");\r\n            String styduear = StringUtils.substringBetween(dat,\"»\", \"р.\");\r\n//            styduear = styduear.replaceAll(\" \",\"\");\r\n//            int styduearI=Integer.parseInt(styduear);\r\n            String teach =StringUtils.substringBetween(text,\"р.\", \"Прізвище\");\r\n            String teachnamefull =StringUtils.substringBefore(teach,\",\");\r\n            String tshit = StringUtils.substringAfter(teach,\",\");\r\n            String teachzv=\"\";\r\n            String teachpos=\"\";\r\n            ordinaryStrings.add(vidId);\r\n            ordinaryStrings.add(edu);\r\n\r\n            ordinaryStrings.add(fac);\r\n            ordinaryStrings.add(year);\r\n            ordinaryStrings.add(grouup);\r\n            ordinaryStrings.add(sub);\r\n            ordinaryStrings.add(sem);\r\n            ordinaryStrings.add(credits);\r\n            ordinaryStrings.add(contr);\r\n            ordinaryStrings.add(dat);\r\n\r\n            for (int l =0; l<ordinaryStrings.size(); l++)\r\n            {\r\n                if(ordinaryStrings.get(l).equals(\"\"))\r\n                {\r\n                    throw new Exception(\"Помилка в шапчці\");\r\n                }\r\n            }\r\n            if (tshit.contains(\",\")) {\r\n\r\n                teachpos = StringUtils.substringBetween(teach, \",\", \",\");\r\n                teachzv = StringUtils.substringAfterLast(teach, \",\");\r\n            }else\r\n            {\r\n                teachpos = StringUtils.substringAfterLast(teach, \",\");\r\n                teachzv =\"\";\r\n            }\r\n            dat= dat.replaceAll(\" \", \"\")\r\n                .replaceAll(\"\\n\",\"\")\r\n                .replaceAll(\"\\r\",\"\")\r\n                .replaceAll(\"квітня\",\"/04/\")\r\n                .replaceAll(\"червня\",\"/06/\")\r\n                .replaceAll(\"січня\",\"/01/\")\r\n                .replaceAll(\"лютого\",\"/02/\")\r\n                .replaceAll(\"березня\",\"/03/\")\r\n                .replaceAll(\"червня\",\"/06/\")\r\n                .replaceAll(\"липня\",\"/07/\")\r\n                .replaceAll(\"серпня\",\"/08/\")\r\n                .replaceAll(\"травня\",\"/05/\")\r\n                .replaceAll(\"вересня\",\"/09/\")\r\n                .replaceAll(\"жовтня\",\"/10/\")\r\n                .replaceAll(\"листопада\",\"/11/\")\r\n                .replaceAll(\"грудня\",\"/12/\")\r\n                .replaceAll(\"«\",\"\")\r\n                .replaceAll(\"»\",\"\");\r\n            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);\r\n            LocalDate dateTime = LocalDate.parse(dat, formatter);\r\n            Date datefinal = Date.valueOf(dateTime);\r\n            System.out.println(dateTime);\r\n            styduear = StringUtils.substringAfterLast(dat,\"/\");\r\n          //  styduear = styduear.replaceAll(\" \",\"\");\r\n             int styduearI=Integer.parseInt(styduear);\r\n            edu = edu.replaceAll(\" \", \"\")\r\n                .replaceAll(\"\\r\", \"\")\r\n                .replaceAll(\"\\n\", \"\");\r\n\r\n            vidId = vidId.replaceAll(\" \", \"\")\r\n                        .replaceAll(\"\\r\", \"\")\r\n                        .replaceAll(\"\\n\", \"\");\r\n            int vidIdInt=Integer.parseInt(vidId);\r\n            fac= fac.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            year=year.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            int yearI=Integer.parseInt(year);\r\n            grouup= grouup.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            sub= sub.replaceAll(\"\\n\", \"\")\r\n                    .replaceAll(\"\\r\", \"\");\r\n            sem=sem.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                   // .replaceAll(\"д\", \"1\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n           // int semI=Integer.parseInt(sem);\r\n            credits=credits.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n                  //  .replaceAll(\".\", \",\");\r\n            double creditsInt=Double.parseDouble(credits);\r\n            contr= contr.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            teachnamefull= teachnamefull\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            teachnamefull= teachnamefull.replaceAll(\" \", \"\");\r\n            String[] tech = teachnamefull.split(\"(?=[A-Я])\");\r\n            System.out.println(Arrays.toString(tech));\r\n            String tlast = \"\";\r\n            String tfirst = \"\";\r\n            String tSecond =\"\";\r\n            int techfulllength =tech.length;\r\n             tlast = tech[0];\r\n             tfirst = tech[1];\r\n             if (techfulllength==3) {\r\n                 tSecond = tech[2];\r\n             }\r\n             teachzv= teachzv\r\n                .replaceAll(\"\\r\", \"\")\r\n                .replaceAll(\"\\n\", \"\");\r\n             teachpos= teachpos\r\n                .replaceAll(\"\\r\", \"\")\r\n                .replaceAll(\"\\n\", \"\");\r\n\r\n             System.out.println(text);\r\n             System.out.println(\"vidId\\n\"+vidId);\r\n             System.out.println(\"edu\\n\"+edu);\r\n             System.out.println(\"fac\\n\"+fac);\r\n             System.out.println(\"year\\n\"+year);\r\n             System.out.println(\"group\\n\"+grouup);\r\n             System.out.println(\"sub\\n\"+sub);\r\n             System.out.println(\"sem\\n\"+sem);\r\n             System.out.println(\"credits\\n\"+credits);\r\n             System.out.println(\"contr\\n\"+contr);\r\n             System.out.println(\"dat\\n\"+dat);\r\n             System.out.println(\"teach\\n\"+teach);\r\n             System.out.println(\"teach\\n\"+teachnamefull);\r\n             System.out.println(\"teachlast\\n\"+tlast);\r\n             System.out.println(\"teachfirst\\n\"+tfirst);\r\n             System.out.println(\"teachseconf\\n\"+tSecond);\r\n             System.out.println(\"teachzv\\n\"+teachzv);\r\n             System.out.println(\"teachpos\\n\"+teachpos);\r\n             String markshelp =StringUtils.substringBetween(text,\"Підпис\",\"*\");\r\n\r\n             String marks =StringUtils.substringAfter(markshelp,\"1\");\r\n             marks=\"1 \"+marks;\r\n\r\n             String end =StringUtils.substringBetween(text,\"*\",\"Декан\");\r\n\r\n             System.out.println(\"marks\\n\"+marks);\r\n             System.out.println(\"end\\n\"+end);\r\n\r\n             String ontest = StringUtils.substringBetween(end, \"заліку\", \"Кількість\");\r\n             ontest = ontest\r\n                    .replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n             String absentf = StringUtils.substringBetween(end, \"не з’явились\", \"Кількість\");\r\n             String absent = StringUtils.substringAfter(absentf, \"залік\");\r\n             String notallowed = StringUtils.substringAfterLast(end, \"заліку\");\r\n             notallowed = notallowed\r\n                    .replaceAll(\" \", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n             absent = absent\r\n                    .replaceAll(\" \", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n             System.out.println(\"ontest\\n\" + ontest);\r\n             System.out.println(\"absent\\n\" + absent);\r\n             System.out.println(\"notallowed\\n\" + notallowed);\r\n             int ontestI = Integer.parseInt(ontest);\r\n             int absentI = Integer.parseInt(absent);\r\n             int notallowedI = Integer.parseInt(notallowed);\r\n\r\n             marks= marks.replaceAll(\"\\\\s+\", \" \")\r\n                    .replaceAll(\"\\r\", \" \")\r\n                    .replaceAll(\"\\n\", \" \")\r\n                    .replaceAll(\"бп\", \"бп \")\r\n                    .replaceAll(\"мп\", \"мп \")\r\n                    .replaceAll(\"\\\\s+\", \" \");\r\n             marks= marks.replaceAll(\"Не зараховано\", \"Незараховано\")\r\n                    .replaceAll(\"Не відвідував\", \"Невідвідував\")\r\n                    .replaceAll(\"Не допущений\", \"Недопущено\");\r\n             marks= marks.replaceAll(\"Незараховано\",\"Незараховано \")\r\n                    .replaceAll( \"Невідвідував\",\"Невідвідував \")\r\n                    .replaceAll(\"Недопущений\", \"Недопущений\")\r\n                    .replaceAll(\"\\\\s+\", \" \")\r\n                    .replaceAll(\"A\", \"A \")\r\n                    .replaceAll(\"B\", \"B \")\r\n                    .replaceAll(\"C\", \"C \")\r\n                    .replaceAll(\"D\", \"D \")\r\n                    .replaceAll(\"E\", \"E \")\r\n                    .replaceAll(\"F\", \"F \")\r\n                    .replaceAll(\"\\\\s+\", \" \");\r\n\r\n            System.out.println(\"marks\\n\"+marks);\r\n            String[] marksvidstr = marks.split(\" \");\r\n            System.out.println(\"len\\n\"+marksvidstr.length);\r\n            boolean fulltable = false;\r\n            if (marksvidstr.length%12==0)\r\n            {\r\n             fulltable=true;\r\n            }\r\n            System.out.println(Arrays.toString(marksvidstr));\r\n            System.out.println(marksvidstr.length);\r\n\r\n            {\r\n                ArrayList<String> num=new ArrayList<>();\r\n                ArrayList<String> last=new ArrayList<>();\r\n                ArrayList<String> first=new ArrayList<>();\r\n                ArrayList<String> second=new ArrayList<>();\r\n                ArrayList<String> recordi=new ArrayList<>();\r\n                ArrayList<String> recordslesh=new ArrayList<>();\r\n                ArrayList<String> recorded=new ArrayList<>();\r\n                ArrayList<String> trym=new ArrayList<>();\r\n                ArrayList<String> ekz=new ArrayList<>();\r\n                ArrayList<String> razom=new ArrayList<>();\r\n                ArrayList<String> national=new ArrayList<>();\r\n                ArrayList<String> ektsmarktable=new ArrayList<>();\r\n                //якщо не повна таблиця\r\n                for (int ii = 0; ii<marksvidstr.length;ii++) {\r\n                   num.add(marksvidstr[ii]);\r\n                   ii++;\r\n                    last.add(marksvidstr[ii]);\r\n                    ii++;\r\n                    first.add(marksvidstr[ii]);\r\n                    ii++;\r\n                    if (marksvidstr[ii].equals(\"І\")) {\r\n                        second.add(\"\");\r\n                        recordi.add(\"І\");\r\n                        ii++;\r\n                        recordslesh.add(marksvidstr[ii]);\r\n                        ii++;\r\n                        recorded.add(marksvidstr[ii]);\r\n                        ii++;\r\n\r\n                    } else {\r\n                        second.add(marksvidstr[ii]);\r\n                        ii++;\r\n                        if (marksvidstr[ii].equals(\"І\")) {\r\n                            recordi.add(\"І\");\r\n                            ii++;\r\n                            recordslesh.add(marksvidstr[ii]);\r\n                            ii++;\r\n                            recorded.add(marksvidstr[ii]);\r\n                            ii++;\r\n                        } else {\r\n                            recordi.add(\"\");\r\n                            recordslesh.add(\"\");\r\n                            recorded.add(\"\");\r\n                        }\r\n                    }\r\n                    if (marksvidstr[ii].codePointAt(0) >= 48 && marksvidstr[ii].codePointAt(0) <= 57) {\r\n                        trym.add(marksvidstr[ii]);\r\n                        ii++;\r\n                    } else {\r\n                        trym.add(\"0\");\r\n                       // ekz.add(\"0\");\r\n                      //  razom.add(\"0\");\r\n                    }\r\n                    if (marksvidstr[ii].codePointAt(0) >= 48 && marksvidstr[ii].codePointAt(0) <= 57) {\r\n                        ekz.add(marksvidstr[ii]); ii++;\r\n                    }\r\n                    else {\r\n                        ekz.add(\"0\");\r\n                    //    razom.add(\"0\");\r\n                    }\r\n                    if (marksvidstr[ii].codePointAt(0) >= 48 && marksvidstr[ii].codePointAt(0) <= 57) {\r\n                        razom.add(marksvidstr[ii]); ii++;\r\n                    }else {\r\n                        razom.add(\"0\");\r\n                    }\r\n                    national.add(marksvidstr[ii]); ii++;\r\n                    ektsmarktable.add(marksvidstr[ii]);\r\n\r\n                    System.out.println(\"ok\");\r\n                }\r\n\r\n                int amountOfrows = first.size();\r\n                int nedop=0;\r\n                int nevidvid=0;\r\n                for (int i  = 0; i<amountOfrows;i++){\r\n                    if (national.get(i).equals(\"Недопущено\"))\r\n                    {\r\n                        nedop++;\r\n                    }\r\n                    if (national.get(i).equals(\"Невідвідував\"))\r\n                    {\r\n                        nevidvid++;\r\n                    }\r\n                }\r\n                if(amountOfrows-nevidvid-nedop!=ontestI)\r\n                {\r\n                    throw new Exception(\"Не збігається кількість людей у відомості\");\r\n                }\r\n                if(nedop!=notallowedI)\r\n                {\r\n                    throw new Exception(\"Не збігається кількість недопущених\");\r\n                }\r\n                //array creation\r\n\r\n                String[][] markar= new String[first.size()][12];\r\n                for (int i = 0; i<first.size(); i++)\r\n                {\r\n                    for(int j=0; j<12; j++)\r\n                    {\r\n                        if(j==0) {\r\n                            markar[i][j] =num.get(i);\r\n                        }\r\n                        if(j==1) {\r\n                            markar[i][j] =last.get(i);\r\n                        }\r\n                        if(j==2) {\r\n                            markar[i][j] =first.get(i);\r\n                        }\r\n                        if(j==3) {\r\n                            markar[i][j] =second.get(i);\r\n                        }\r\n                        if(j==4) {\r\n                            markar[i][j] =recordi.get(i);\r\n                        }\r\n                        if(j==5) {\r\n                            markar[i][j] =recordslesh.get(i);\r\n                        }\r\n                        if(j==6) {\r\n                            markar[i][j] =recorded.get(i);\r\n                        }\r\n                        if(j==7) {\r\n                            markar[i][j] =trym.get(i);\r\n                        }\r\n                        if(j==8) {\r\n                            markar[i][j] =ekz.get(i);\r\n                        }\r\n                        if(j==9) {\r\n                            markar[i][j] =razom.get(i);\r\n                        }\r\n                        if(j==10) {\r\n                            markar[i][j] =national.get(i);\r\n                        }\r\n                        if(j==11) {\r\n                            markar[i][j] =ektsmarktable.get(i);\r\n                        }\r\n                    }\r\n                    System.out.println(\"arrau ok\");\r\n                }\r\n                for (int i = 0; i<first.size(); i++)\r\n                {\r\n                    for(int j=0; j<12; j++) {\r\n                        System.out.print(markar[i][j]+\"|\");\r\n                    }\r\n                    System.out.println(\"end\");\r\n                }\r\n                //object creation\r\n                //subject\r\n                Subject subjecthelp = new Subject(sub, edu, fac);\r\n                Teacher teacher = new Teacher(tfirst, tlast, tSecond, teachpos, teachzv, \"academ_status xzzz\");\r\n\r\n                ArrayList<Student> students = new ArrayList<>();\r\n                ArrayList<Mark_vid> mark_vids = new ArrayList<>();\r\n                for (int ii = 0; ii < ontestI; ii++) {\r\n                    String stlastname = markar[ii ][1];\r\n                    String stfirstname = markar[ii ][2];\r\n                    String stsecondname = markar[ii ][3];\r\n                    String recordbook = markar[ii ][4] + markar[ii ][5] + markar[ii ][6];\r\n//                         System.out.println(stlastname+stfirstname+stsecondname+recordbook);\r\n                    Student student = new Student(stlastname, stfirstname, stsecondname, recordbook);\r\n                    students.add(student);\r\n\r\n                    String mark1 = markar[ii ][7];\r\n                    String mark2 = markar[ii ][8];\r\n                    String markraz = markar[ii ][9];\r\n                    String nats = markar[ii ][10];\r\n                    String ekts = markar[ii ][11];\r\n                    int mark1I = Integer.parseInt(mark1);\r\n                    int mark2I = Integer.parseInt(mark2);\r\n                    int markrazI = Integer.parseInt(markraz);\r\n                    Mark_vid mark_vid = new Mark_vid(mark1I, mark2I, markrazI, nats, ekts, student.getStud_id(), -1);\r\n//                    try {\r\n                        mark_vid.validateManual();\r\n//                    }catch (Exception e){\r\n//                        e.printStackTrace();\r\n\r\n//                        error = e.getMessage();\r\n//                    }\r\n\r\n                    mark_vids.add(mark_vid);\r\n\r\n                }\r\n                boolean caninsert2=false;\r\n                //validation\r\n                caninsert2=true;\r\n\r\n                //inserting\r\n                Data_exam data_exam= new Data_exam();\r\n                boolean firstsub=false;\r\n                if(caninsert2) {\r\n                    if (getIdsIfExists.getSubjectId(subjecthelp) == 0) {\r\n                        firstsub=true;\r\n                        try{\r\n                        insertStatements.insertSubject(subjecthelp);}\r\n                        catch (Exception e){\r\n                            throw new Exception(\"Не можна вписати предмет\");\r\n                        }\r\n                    }\r\n                    subjecthelp.setId_subject(getIdsIfExists.getSubjectId(subjecthelp));\r\n                    //teaccher\r\n                    boolean firstTeachettimeinsertion=false;\r\n                    if (getIdsIfExists.getTeacherId(teacher) == 0) {\r\n                        firstTeachettimeinsertion = true;\r\n                        try{\r\n                            insertStatements.insertTeacher(teacher);\r\n                        }\r\n                         catch (Exception e){\r\n                            if(firstsub) deleteStatements.deleteSubject(subjecthelp);\r\n                           throw new Exception(\"Не можна вписати вчителя\");\r\n                        }\r\n                    }\r\n                    teacher.setId_teacher(getIdsIfExists.getTeacherId(teacher));\r\n                    //groupst\r\n                    Group_st group_st = new Group_st(grouup, styduearI, sem, yearI, subjecthelp.getId_subject());\r\nboolean firatGroup= false;\r\n                    if (getIdsIfExists.getGroupId(group_st) == 0) {\r\n                        try{\r\n                            firatGroup=true;\r\n                            insertStatements.insertGroup(group_st);\r\n                        }\r\n                         catch (Exception e){\r\n                             if(firstsub) deleteStatements.deleteSubject(subjecthelp);\r\n                             if (firstTeachettimeinsertion) deleteStatements.deleteTeacher(teacher);\r\n                        throw new Exception(\"Не можна вписати групу\");\r\n                    }\r\n                    }\r\n                    group_st.setId_group(getIdsIfExists.getGroupId(group_st));\r\n                    data_exam = new Data_exam(vidIdInt, ontestI, absentI, notallowedI, contr, datefinal, group_st.getId_group(), teacher.getId_teacher());\r\nboolean firstdata= false;\r\n                    // dataexam\r\n                    if (getIdsIfExists.getDataExamId(data_exam) == 0) {\r\n                        firstdata = true;\r\n                        try {insertStatements.insertDataExam(data_exam);\r\n                        }\r\n                         catch (Exception e){\r\n                             if(firstsub) deleteStatements.deleteSubject(subjecthelp);\r\n                             if(firstTeachettimeinsertion) deleteStatements.deleteTeacher(teacher);\r\n                             if(firatGroup ) deleteStatements.deleteGroup(group_st);\r\n                        throw new Exception(\"Не можна вписати відомість\");\r\n                    }\r\n                    }\r\n\r\n                    System.out.println(sub.toString());\r\n                    System.out.println(teacher.toString());\r\n                    System.out.println(group_st.toString());\r\n                    System.out.println(data_exam.toString());\r\n                    //students and markvid\r\n                    ArrayList<Boolean> bollst= new ArrayList<>();\r\n                    for (int k =0 ; k<students.size(); k++)\r\n                    {\r\n                        bollst.add(false);\r\n                        Student student = students.get(k);\r\n                        Mark_vid mark_vid = mark_vids.get(k);\r\n                        if (getIdsIfExists.getStudentId(student) == 0) {\r\n                            bollst.set(k, true);\r\n                           try { insertStatements.insertStudent(student);\r\n                           }\r\n                           catch (Exception e){\r\n                               if(firstdata) deleteStatements.deleteVid(data_exam);\r\n                               if(firstsub) deleteStatements.deleteSubject(subjecthelp);\r\n                               if(firstTeachettimeinsertion) deleteStatements.deleteTeacher(teacher);\r\n                               if(firatGroup ) deleteStatements.deleteGroup(group_st);\r\n                               for (int d = 0; d<=k;d++)\r\n                                {\r\n                                    if(bollst.get(k))\r\n                                    deleteStatements.deleteStudent(students.get(d));\r\n                                }\r\n                                throw new Exception(\"Не можна вписати якогось студента\");\r\n                        }\r\n                        }\r\n                        student.setStud_id(getIdsIfExists.getStudentId(student));\r\n                        mark_vid.setId_data_exam(data_exam.getId_data_exam());\r\n                        mark_vid.setStud_id(student.getStud_id());\r\n                        if (getIdsIfExists.getMarkVid(mark_vid) == 0) {\r\n                           try { insertStatements.insertMarkVid(mark_vid);\r\n                        }\r\n                           catch (Exception e){\r\n                               if(firstsub) deleteStatements.deleteSubject(subjecthelp);\r\n                               if(firstTeachettimeinsertion) deleteStatements.deleteTeacher(teacher);\r\n                               if(firatGroup ) deleteStatements.deleteGroup(group_st);\r\n                               for (int d = 0; d<=k;d++)\r\n                               {\r\n                                   if(bollst.get(k))\r\n                                       deleteStatements.deleteStudent(students.get(d));\r\n                               }\r\n                        throw new Exception(\"Не можна вписати оцінки з відомості якогось студента\");\r\n                    }\r\n                        }\r\n                        mark_vid.setId_mark_vid(getIdsIfExists.getMarkVid(mark_vid));\r\n\r\n                        System.out.println(student.toString()+\"\\t\"+mark_vid.toString());\r\n                    }\r\n                }\r\n\r\n            }\r\n        }else\r\n            //яко бігунець\r\n            {\r\n                bihunetsParser(text);\r\n            }\r\n        }catch (Exception e){\r\n            e.printStackTrace();\r\n\r\n            System.err.println(\"видаляю все до дідька!!!\");\r\n            error = e.getMessage();\r\n            throw e;\r\n        }\r\n        document.close();\r\n        System.err.println(\"Помилка \"+error);\r\n        System.out.println(\"Кінець \");\r\n}\r\n        private void bihunetsParser(String text) throws Exception {\r\ntry {\r\n\r\n\r\n            String vidId=StringUtils.substringBetween(text,\"№\", \"Освітній\");\r\n            String edu=StringUtils.substringBetween(text,\"рівень\", \"Факультет\");\r\n\r\n            String fac=StringUtils.substringBetween(text,\"Факультет\", \"Рік\");\r\n            String year=StringUtils.substringBetween(text,\"навчання\", \"Група\");\r\n\r\n            String grouup =StringUtils.substringBetween(text,\"Група\", \"Дисципліна\");\r\n            String sub =StringUtils.substringBetween(text,\"Дисципліна\", \"Семестр\");\r\n            String sem =StringUtils.substringBetween(text,\"Семестр\", \"Залікові\");\r\n            String credits =StringUtils.substringBetween(text,\"бали\", \"Направлення\");\r\n            String oktill = StringUtils.substringBetween(text,\"дійсне до\", \"Причина\");\r\n\r\n            String reason = StringUtils.substringBetween(text,\"перенесення\", \"Форма\");\r\n\r\n            String contr =StringUtils.substringBetween(text,\"контролю:\", \"Дата\");\r\n            String dat =StringUtils.substringBetween(text,\"Дата\", \"р.\");\r\n            String teach =StringUtils.substringBetween(text,\"р.\", \"Прізвище\");\r\n            String teachnamefull =StringUtils.substringBefore(teach,\",\");\r\n    String styduear = StringUtils.substringBetween(dat,\"»\", \"р.\");\r\n\r\n\r\n            String tshit = StringUtils.substringAfter(teach,\",\");\r\n            String teachzv=\"\";\r\n            String teachpos=\"\";\r\n            if (tshit.contains(\",\")) {\r\n\r\n                teachzv = StringUtils.substringBetween(teach, \",\", \",\");\r\n                teachpos = StringUtils.substringAfterLast(teach, \",\");\r\n            }else\r\n            {\r\n                teachzv = StringUtils.substringAfterLast(teach, \",\");\r\n                teachpos =\"\";\r\n\r\n            }\r\n            oktill=oktill.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\n\",\"\")\r\n                    .replaceAll(\"\\r\",\"\")\r\n                    .replaceAll(\"квітня\",\"/04/\")\r\n                    .replaceAll(\"червня\",\"/06/\")\r\n                    .replaceAll(\"січня\",\"/01/\")\r\n                    .replaceAll(\"лютого\",\"/02/\")\r\n                    .replaceAll(\"березня\",\"/03/\")\r\n                    .replaceAll(\"червня\",\"/06/\")\r\n                    .replaceAll(\"липня\",\"/07/\")\r\n                    .replaceAll(\"серпня\",\"/08/\")\r\n                    .replaceAll(\"травня\",\"/05/\")\r\n                    .replaceAll(\"вересня\",\"/09/\")\r\n                    .replaceAll(\"жовтня\",\"/10/\")\r\n                    .replaceAll(\"листопада\",\"/11/\")\r\n                    .replaceAll(\"грудня\",\"/12/\")\r\n                    .replaceAll(\"«\",\"\")\r\n                    .replaceAll(\"»\",\"\");\r\n            dat= dat.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\n\",\"\")\r\n                    .replaceAll(\"\\r\",\"\")\r\n                    .replaceAll(\"квітня\",\"/04/\")\r\n                    .replaceAll(\"червня\",\"/06/\")\r\n                    .replaceAll(\"січня\",\"/01/\")\r\n                    .replaceAll(\"лютого\",\"/02/\")\r\n                    .replaceAll(\"березня\",\"/03/\")\r\n                    .replaceAll(\"червня\",\"/06/\")\r\n                    .replaceAll(\"липня\",\"/07/\")\r\n                    .replaceAll(\"серпня\",\"/08/\")\r\n                    .replaceAll(\"травня\",\"/05/\")\r\n                    .replaceAll(\"вересня\",\"/09/\")\r\n                    .replaceAll(\"жовтня\",\"/10/\")\r\n                    .replaceAll(\"листопада\",\"/11/\")\r\n                    .replaceAll(\"грудня\",\"/12/\")\r\n                    .replaceAll(\"«\",\"\")\r\n                    .replaceAll(\"»\",\"\");\r\n            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);\r\n            LocalDate dateTime = LocalDate.parse(dat, formatter);\r\n            if(oktill.equals(\"\")){\r\n                oktill= \"01/01/1000\";\r\n            }\r\n            Date datefinal = Date.valueOf(dateTime);\r\n\r\n            LocalDate dateTimeok = LocalDate.parse(oktill, formatter);\r\n            Date oktilld = Date.valueOf(dateTimeok);\r\n\r\n            System.out.println(dateTime);\r\n            edu = edu.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n\r\n            vidId = vidId.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            int vidIdInt=Integer.parseInt(vidId);\r\n            fac= fac.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            year=year.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            int yearI=Integer.parseInt(year);\r\n            grouup= grouup.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            sub= sub.replaceAll(\"\\n\", \"\")\r\n                    .replaceAll(\"\\r\", \"\");\r\n            sem=sem.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                 //   .replaceAll(\"д\", \"1\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n         //   int semI=Integer.parseInt(sem);\r\n            credits=credits.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            //  .replaceAll(\".\", \",\");\r\n            double creditsInt=Double.parseDouble(credits);\r\n            contr= contr.replaceAll(\" \", \"\")\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"_\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            teachnamefull= teachnamefull\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            teachnamefull= teachnamefull.replaceAll(\" \", \"\");\r\n            String[] tech = teachnamefull.split(\"(?=[A-Я])\");\r\n            System.out.println(Arrays.toString(tech));\r\n            String tlast = \"\";\r\n            String tfirst = \"\";\r\n            String tSecond =\"\";\r\n            int techfulllength =tech.length;\r\n            tlast = tech[0];\r\n            tfirst = tech[1];\r\n            if (techfulllength==3) {\r\n                tSecond = tech[2];\r\n            }\r\n            teachzv= teachzv\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n            teachpos= teachpos\r\n                    .replaceAll(\"\\r\", \"\")\r\n                    .replaceAll(\"\\n\", \"\");\r\n   // styduear = styduear.replaceAll(\" \",\"\");\r\n    styduear = StringUtils.substringAfterLast(dat,\"/\");\r\n    int styduearI=Integer.parseInt(styduear);\r\n            System.out.println(text);\r\n            System.out.println(\"vidId\\n\"+vidId);\r\n            System.out.println(\"edu\\n\"+edu);\r\n            System.out.println(\"fac\\n\"+fac);\r\n            System.out.println(\"year\\n\"+year);\r\n            System.out.println(\"group\\n\"+grouup);\r\n            System.out.println(\"sub\\n\"+sub);\r\n            System.out.println(\"sem\\n\"+sem);\r\n            System.out.println(\"credits\\n\"+credits);\r\n            System.out.println(\"oktill\\n\"+oktill);\r\n            System.out.println(\"reason\\n\"+reason);\r\n            System.out.println(\"contr\\n\"+contr);\r\n            System.out.println(\"dat\\n\"+dat);\r\n            System.out.println(\"teach\\n\"+teach);\r\n            System.out.println(\"teach\\n\"+teachnamefull);\r\n            System.out.println(\"teachlast\\n\"+tlast);\r\n            System.out.println(\"teachfirst\\n\"+tfirst);\r\n            System.out.println(\"teachseconf\\n\"+tSecond);\r\n\r\n            System.out.println(\"teachzv\\n\"+teachzv);\r\n            System.out.println(\"teachpos\\n\"+teachpos);\r\n            String markshelp =StringUtils.substringBetween(text,\"Підпис\",\"*\");\r\n\r\n            String marks =StringUtils.substringAfter(markshelp,\"1\");\r\n            marks=\"1 \"+marks;\r\n\r\n            System.out.println(\"marks\\n\"+marks);\r\n            marks= marks.replaceAll(\"\\\\s+\", \" \")\r\n                    .replaceAll(\"\\r\", \" \")\r\n                    .replaceAll(\"\\n\", \" \")\r\n                    .replaceAll(\"бп\", \"бп \")\r\n                    .replaceAll(\"мп\", \"мп \")\r\n                    .replaceAll(\"\\\\s+\", \" \");\r\n\r\n            marks= marks\r\n                    .replaceAll(\"\\\\s+\", \" \")\r\n                    .replaceAll(\"A\", \"A \")\r\n                    .replaceAll(\"B\", \"B \")\r\n                    .replaceAll(\"C\", \"C \")\r\n                    .replaceAll(\"D\", \"D \")\r\n                    .replaceAll(\"E\", \"E \")\r\n                    .replaceAll(\"\\\\s+\", \" \");\r\n            String[] marksbihstr = marks.split(\" \");\r\n            System.out.println(\"len\\n\"+marksbihstr.length);\r\n\r\n            System.out.println(Arrays.toString(marksbihstr));\r\n            System.out.println(marksbihstr.length);\r\n\r\n            {\r\n                ArrayList<String> num=new ArrayList<>();\r\n                ArrayList<String> last=new ArrayList<>();\r\n                ArrayList<String> first=new ArrayList<>();\r\n                ArrayList<String> second=new ArrayList<>();\r\n                ArrayList<String> recordi=new ArrayList<>();\r\n                ArrayList<String> recordslesh=new ArrayList<>();\r\n                ArrayList<String> recorded=new ArrayList<>();\r\n                ArrayList<String> trym=new ArrayList<>();\r\n                ArrayList<String> ekz=new ArrayList<>();\r\n                ArrayList<String> razom=new ArrayList<>();\r\n                ArrayList<String> national=new ArrayList<>();\r\n                ArrayList<String> ektsmarktable=new ArrayList<>();\r\n                //якщо не повна таблиця\r\n                for (int ii = 0; ii<marksbihstr.length;ii++) {\r\n                    num.add(marksbihstr[ii]);\r\n                    ii++;\r\n                    last.add(marksbihstr[ii]);\r\n                    ii++;\r\n                    first.add(marksbihstr[ii]);\r\n                    ii++;\r\n                    if (marksbihstr[ii].equals(\"І\")) {\r\n                        second.add(\"\");\r\n                        recordi.add(\"І\");\r\n                        ii++;\r\n                        recordslesh.add(marksbihstr[ii]);\r\n                        ii++;\r\n                        recorded.add(marksbihstr[ii]);\r\n                        ii++;\r\n\r\n                    } else {\r\n                        second.add(marksbihstr[ii]);\r\n                        ii++;\r\n                        if (marksbihstr[ii].equals(\"І\")) {\r\n                            recordi.add(\"І\");\r\n                            ii++;\r\n                            recordslesh.add(marksbihstr[ii]);\r\n                            ii++;\r\n                            recorded.add(marksbihstr[ii]);\r\n                            ii++;\r\n                        } else {\r\n                            recordi.add(\"\");\r\n                            recordslesh.add(\"\");\r\n                            recorded.add(\"\");\r\n                        }\r\n                    }\r\n                    if (marksbihstr[ii].codePointAt(0) >= 48 && marksbihstr[ii].codePointAt(0) <= 57) {\r\n                        trym.add(marksbihstr[ii]);\r\n                        ii++;\r\n                    } else {\r\n                        trym.add(\"0\");\r\n                        // ekz.add(\"0\");\r\n                        //  razom.add(\"0\");\r\n                    }\r\n                    if (marksbihstr[ii].codePointAt(0) >= 48 && marksbihstr[ii].codePointAt(0) <= 57) {\r\n                        ekz.add(marksbihstr[ii]); ii++;\r\n                    }\r\n                    else {\r\n                        ekz.add(\"0\");\r\n                        //    razom.add(\"0\");\r\n                    }\r\n                    if (marksbihstr[ii].codePointAt(0) >= 48 && marksbihstr[ii].codePointAt(0) <= 57) {\r\n                        razom.add(marksbihstr[ii]); ii++;\r\n                    }else {\r\n                        razom.add(\"0\");\r\n                    }\r\n                    national.add(marksbihstr[ii]); ii++;\r\n                    ektsmarktable.add(marksbihstr[ii]);\r\n\r\n                    System.out.println(\"ok\");\r\n                }\r\n\r\n                //array creation\r\n\r\n                String[][] markar= new String[first.size()][12];\r\n                for (int i = 0; i<first.size(); i++)\r\n                {\r\n                    for(int j=0; j<12; j++)\r\n                    {\r\n                        if(j==0) {\r\n                            markar[i][j] =num.get(i);\r\n                        }\r\n                        if(j==1) {\r\n                            markar[i][j] =last.get(i);\r\n                        }\r\n                        if(j==2) {\r\n                            markar[i][j] =first.get(i);\r\n                        }\r\n                        if(j==3) {\r\n                            markar[i][j] =second.get(i);\r\n                        }\r\n                        if(j==4) {\r\n                            markar[i][j] =recordi.get(i);\r\n                        }\r\n                        if(j==5) {\r\n                            markar[i][j] =recordslesh.get(i);\r\n                        }\r\n                        if(j==6) {\r\n                            markar[i][j] =recorded.get(i);\r\n                        }\r\n                        if(j==7) {\r\n                            markar[i][j] =trym.get(i);\r\n                        }\r\n                        if(j==8) {\r\n                            markar[i][j] =ekz.get(i);\r\n                        }\r\n                        if(j==9) {\r\n                            markar[i][j] =razom.get(i);\r\n                        }\r\n                        if(j==10) {\r\n                            markar[i][j] =national.get(i);\r\n                        }\r\n                        if(j==11) {\r\n                            markar[i][j] =ektsmarktable.get(i);\r\n                        }\r\n                    }\r\n                    System.out.println(\"arrau ok\");\r\n                }\r\n                for (int i = 0; i<first.size(); i++)\r\n                {\r\n                    for(int j=0; j<12; j++) {\r\n                        System.out.print(markar[i][j]+\"|\");\r\n                    }\r\n                    System.out.println(\"end\");\r\n                }\r\n                //object creation\r\n                //subject\r\n                Subject subjecthelp = new Subject(sub, edu, fac);\r\n                subjecthelp.setId_subject(getIdsIfExists.getSubjectId(subjecthelp));\r\n                if (getIdsIfExists.getSubjectId(subjecthelp) == 0) {\r\n                    System.out.println(\"bad bihynets nsybject\");\r\n                    throw new Exception(\"Для такого предмету не здавали відомості\");\r\n                }\r\n                Teacher teacher = new Teacher(tfirst, tlast, tSecond, teachpos, teachzv, \"academ_status xzzz\");\r\n//\r\n                ArrayList<Student> students = new ArrayList<>();\r\n                ArrayList<Mark_bih> mark_bihs = new ArrayList<>();\r\n                int rowsnum = first.size();\r\n                for (int ii = 0; ii < rowsnum; ii++) {\r\n                    String stlastname = markar[ii ][1];\r\n                    String stfirstname = markar[ii ][2];\r\n                    String stsecondname = markar[ii ][3];\r\n                    String recordbook = markar[ii ][4] + markar[ii ][5] + markar[ii ][6];\r\n//                         System.out.println(stlastname+stfirstname+stsecondname+recordbook);\r\n                    Student student = new Student(stlastname, stfirstname, stsecondname, recordbook);\r\n                    students.add(student);\r\n\r\n                    String mark1 = markar[ii ][7];\r\n                    String mark2 = markar[ii ][8];\r\n                    String markraz = markar[ii ][9];\r\n                    String nats = markar[ii ][10];\r\n                    String ekts = markar[ii ][11];\r\n                    int mark1I = Integer.parseInt(mark1);\r\n                    int mark2I = Integer.parseInt(mark2);\r\n                    int markrazI = Integer.parseInt(markraz);\r\n                    System.out.println(getIdsIfExists.getMarkVidByStudent(student,subjecthelp));\r\n                    Mark_bih mark_bih = new Mark_bih(mark1I, mark2I, markrazI, nats, ekts,\r\n                             getIdsIfExists.getMarkVidByStudent(student,subjecthelp),0);\r\n                    System.out.println(mark_bih.getId_mark_vid());\r\n                    try {\r\n                        mark_bih.validateManual();\r\n                    }catch (Exception e)\r\n                    {\r\n                        throw new Exception(e.getMessage());\r\n                    }\r\n                    mark_bihs.add(mark_bih);\r\n                    System.out.println(mark_bihs.get(ii).getId_mark_vid());\r\n                }\r\n                boolean caninsert2=false;\r\n                //validation\r\n                caninsert2=true;\r\n                //inserting\r\n\r\n                Bihunets bihunets = new Bihunets();\r\n\r\n                if(caninsert2) {\r\n\r\n                    subjecthelp.setId_subject(getIdsIfExists.getSubjectId(subjecthelp));\r\n                    //teaccher\r\n                    boolean firsttrcherinsertion = false;\r\n                    if (getIdsIfExists.getTeacherId(teacher) == 0) {\r\n                        firsttrcherinsertion=true;\r\n                       try{ insertStatements.insertTeacher(teacher);\r\n                    }\r\n                           catch (Exception e){\r\n                        throw new Exception(\"Не можна вписати вчителя з бігунця\");\r\n                    }\r\n                    }\r\n                    teacher.setId_teacher(getIdsIfExists.getTeacherId(teacher));\r\n                    //groupst\r\n                    Group_st group_st = new Group_st(grouup, styduearI, sem, yearI, subjecthelp.getId_subject());\r\nboolean firstGrop=false;\r\n                    if (getIdsIfExists.getGroupId(group_st) == 0) {\r\n                        firstGrop=true;\r\n                        try {insertStatements.insertGroup(group_st);\r\n                    }\r\n                           catch (Exception e){\r\nif(firsttrcherinsertion)\r\n                        deleteStatements.deleteTeacher(teacher);\r\n\r\n                        throw new Exception(\"Не можна вписати групу з бігунця\");\r\n                    }\r\n                    }\r\n                    group_st.setId_group(getIdsIfExists.getGroupId(group_st));\r\n                    //data_exam = new Data_exam(vidIdInt, ontestI, absentI, notallowedI, contr, datefinal, group_st.getId_group(), teacher.getId_teacher());\r\n                    bihunets = new Bihunets(vidIdInt, datefinal, oktilld, reason, contr, teacher.getId_teacher());\r\nboolean firstbih = false;\r\n                    if (getIdsIfExists.getBihId(bihunets) == 0) {\r\n                        firstbih = true;\r\n                        try {\r\n                            insertStatements.insertBihunets(bihunets);\r\n                        } catch (Exception e) {\r\n                            if (firsttrcherinsertion) deleteStatements.deleteTeacher(teacher);\r\n                            if (firstGrop) deleteStatements.deleteGroup(group_st);\r\n\r\n                            throw new Exception(\"Не можна вписати бігунець\");\r\n                        }\r\n                    }\r\n\r\n                    // data_exam.setId_data_exam(getIdsIfExists.getDataExamId(data_exam));\r\n\r\n                    System.out.println(sub.toString());\r\n                    System.out.println(teacher.toString());\r\n                    System.out.println(group_st.toString());\r\n                    System.out.println(bihunets.toString());\r\n                    //students and markvid\r\n                    ArrayList<Boolean> boolst = new ArrayList<>();\r\n                    for (int k = 0; k < students.size(); k++) {\r\n                        boolst.add(false);\r\n                        Student student = students.get(k);\r\n                        Mark_bih mark_bih = mark_bihs.get(k);\r\n                        if (getIdsIfExists.getStudentId(student) == 0) {\r\n                            throw new Exception(\"Є студент, який не здавав цей предмет\");\r\n                        }\r\n                        student.setStud_id(getIdsIfExists.getStudentId(student));\r\n                        mark_bih.setId_bih(bihunets.getId_bih());\r\n                        if (getIdsIfExists.getMarkBih(mark_bih) == 0) {\r\n                           try{ insertStatements.insertMarkBih(mark_bih);\r\n                        }\r\n                           catch (Exception e){\r\nif(firstbih) deleteStatements.deleteBih(bihunets);\r\n                        if(firsttrcherinsertion)    deleteStatements.deleteTeacher(teacher);\r\n                           if(firstGrop) deleteStatements.deleteGroup(group_st);\r\n                            for (int d = 0; d<=k;d++)\r\n                            {\r\n                                if(boolst.get(d))\r\n                                deleteStatements.deleteStudent(students.get(d));\r\n                            }\r\n                            throw new Exception(\"Не можна вписати оцінки бігунця якогось студента\");\r\n                        }\r\n                        }\r\n                        mark_bih.setId_mark_bih(getIdsIfExists.getMarkBih(mark_bih));\r\n\r\n                        System.out.println(student.toString() + \"\\t\" + mark_bih.toString());\r\n                    }\r\n                }}\r\n        }catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n            System.err.println(\"ВИДАЛЯБ!!!\");\r\n            error =e.getMessage();\r\n            throw e;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/MyParser.java	(revision f3e19aefdb3fde829e6a741baace43cc66dd577f)
+++ src/main/java/MyParser.java	(date 1624002695120)
@@ -405,7 +405,7 @@
                 //object creation
                 //subject
                 Subject subjecthelp = new Subject(sub, edu, fac);
-                Teacher teacher = new Teacher(tfirst, tlast, tSecond, teachpos, teachzv, "academ_status xzzz");
+                Teacher teacher = new Teacher(tfirst, tlast, tSecond, teachpos, teachzv, " ");
 
                 ArrayList<Student> students = new ArrayList<>();
                 ArrayList<Mark_vid> mark_vids = new ArrayList<>();
@@ -893,7 +893,7 @@
                     System.out.println("bad bihynets nsybject");
                     throw new Exception("Для такого предмету не здавали відомості");
                 }
-                Teacher teacher = new Teacher(tfirst, tlast, tSecond, teachpos, teachzv, "academ_status xzzz");
+                Teacher teacher = new Teacher(tfirst, tlast, tSecond, teachpos, teachzv, " ");
 //
                 ArrayList<Student> students = new ArrayList<>();
                 ArrayList<Mark_bih> mark_bihs = new ArrayList<>();
